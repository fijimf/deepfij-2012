[main]
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=SHA-256
credentialsMatcher.hashIterations=1024
credentialsMatcher.hashSalted=true

jdbcRealm = com.fijimf.deepfij.server.security.SaltedJdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = select password from user where email = ?
jdbcRealm.userRolesQuery = select role from role r, user u, role_user ru where u.email = ? and ru.user_id=u.user_id and ru.role_id=r.id
jdbcRealm.permissionsQuery = select permisssion from permissions p, roles r, users u where u.email = ? and r.user_id=u.user_id and p.role_id=r.role_id

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = mutombo
ds.databaseName = deepfijdb
jdbcRealm.dataSource = $ds
jdbcRealm.credentialsMatcher = $credentialsMatcher



# roles filter: redirect to error page if user does not have access rights
[users]
# The 'users' section is for simple deployments when you only need a small number of
# statically-defined set of User accounts.

[roles]
# The 'roles' section is for simple deployments when you only need a small number of
# statically-defined roles.
